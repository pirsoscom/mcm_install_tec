apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: k8s-demo-app-web-route
  namespace: k8s-demo-app-ns
  generation: 1
  labels:
    app: k8s-demo-app-web
spec:
  template:
    apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: k8s-demo-app-web
      name: k8s-demo-app-web-route
    spec:
      #host: k8s-demo-app-web-service.apps.91.121.172.228.nip.io
      to:
        kind: Service
        name: k8s-demo-app-web-service
        weight: 100
      wildcardPolicy: None
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: k8s-demo-app-web-config
  namespace: k8s-demo-app-ns
  generation: 1
  labels:
    app: k8s-demo-app-web
spec:
  template:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: k8s-demo-app-web
      name: k8s-demo-app-web-config
    data:
      backend-url: http://k8s-demo-app-backend-service.apps.91.121.172.228.nip.io/api
      application-name: k8s-demo-app-web
    spec:
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: k8s-demo-app-web
  namespace: k8s-demo-app-ns
  generation: 1
  labels:
    app: k8s-demo-app-web
spec:
  template:
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: k8s-demo-app-web
      namespace: default
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: k8s-demo-app-web
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: "30%"
          maxSurge: "90%"
      template:
        metadata:
          labels:
            app: k8s-demo-app-web
            version: current
        spec:
          containers:
          - name: k8s-demo-app-web
            image: niklaushirt/k8sdemo:1.0.0
            imagePullPolicy: Always 
            livenessProbe:
              httpGet:
                path: /
                port: 3000
              initialDelaySeconds: 10
              periodSeconds: 30
            readinessProbe:
              httpGet:
                path: /
                port: 3000
              initialDelaySeconds: 20
              periodSeconds: 10
            ports:
            - containerPort: 3000
            resources:
              requests:
                cpu: "50m"
                memory: "50Mi"
              limits:
                cpu: "50m"
                memory: "50Mi"
            env:
              - name: PORT
                value : "3000"
              - name: APPLICATION_NAME
                valueFrom:
                  configMapKeyRef:
                    name: k8s-demo-app-web-config
                    key: application-name
              - name: BACKEND_URL
                valueFrom:
                  configMapKeyRef:
                    name: k8s-demo-app-web-config
                    key: backend-url
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: k8s-demo-app-web-service
  namespace: k8s-demo-app-ns
  generation: 1
  labels:
    app: k8s-demo-app-web
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      name: k8s-demo-app-web-service
    spec:
      selector:
        app: k8s-demo-app-web
      ports:
        - protocol: TCP
          port: 3000
          targetPort: 3000
          nodePort: 32123
      type: NodePort
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: k8s-demo-app-backend-route
  namespace: k8s-demo-app-ns
  generation: 1
  labels:
    app: k8s-demo-app-backend
spec:
  template:
    apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: k8s-demo-app-backend
      name: k8s-demo-app-backend-route
    spec:
      host: k8s-demo-app-backend-service.apps.91.121.172.228.nip.io
      to:
        kind: Service
        name: k8s-demo-app-backend-service
        weight: 100
      wildcardPolicy: None
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: k8s-demo-app-backend-config
  namespace: k8s-demo-app-ns
  generation: 1
  labels:
    app: k8s-demo-app-backend
spec:
  template:
    apiVersion: v1
    kind: ConfigMap
    metadata:
      labels:
        app: k8s-demo-app-backend
      name: k8s-demo-app-backend-config
    data:
      backend-message: "Hi there from the Demo App..."
      application-name: k8s-demo-app-backend
    spec:
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: k8s-demo-app-backend
  namespace: k8s-demo-app-ns
  generation: 1
  labels:
    app: k8s-demo-app-backend
spec:
  template:
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      name: k8s-demo-app-backend
      namespace: default
    spec:
      replicas: 2
      selector:
        matchLabels:
          app: k8s-demo-app-backend
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxUnavailable: "30%"
          maxSurge: "90%"
      template:
        metadata:
          labels:
            app: k8s-demo-app-backend
            version: current
        spec:
          containers:
          - name: k8s-demo-app-backend
            image: niklaushirt/k8sdemo-backend:1.0.0
            imagePullPolicy: IfNotPresent 
            livenessProbe:
              httpGet:
                path: /health
                port: 3000
              initialDelaySeconds: 30
              periodSeconds: 10
            readinessProbe:
              httpGet:
                path: /health
                port: 3000
              initialDelaySeconds: 10
              periodSeconds: 10
            ports:
            - containerPort: 3000
            resources:
              requests:
                cpu: "50m"
                memory: "50Mi"
              limits:
                cpu: "50m"
                memory: "50Mi"
            env:
              - name: PORT
                value : "3000"
              - name: APPLICATION_NAME
                valueFrom:
                  configMapKeyRef:
                    name: k8s-demo-app-backend-config
                    key: application-name
              - name: BACKEND_MESSAGE
                valueFrom:
                  configMapKeyRef:
                    name: k8s-demo-app-backend-config
                    key: backend-message
---
apiVersion: app.ibm.com/v1alpha1
kind: Deployable
metadata:
  name: k8s-demo-app-backend-service
  namespace: k8s-demo-app-ns
  generation: 1
  labels:
    app: k8s-demo-app-backend
spec:
  template:
    apiVersion: v1
    kind: Service
    metadata:
      name: k8s-demo-app-backend-service
    spec:
      selector:
        app: k8s-demo-app-backend
      ports:
        - protocol: TCP
          port: 3000
          targetPort: 3000
          nodePort: 32124
      type: NodePort