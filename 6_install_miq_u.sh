# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Install Script for Infrastructure Management
#
# V1.0 
#
# Â©2020 nikh@ch.ibm.com
#
# https://cloud.ibm.com/docs/cloud-pak-multicloud-management?topic=cloud-pak-multicloud-management-cf-getting-started
#
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"

source ./0_config.sh


# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Do Not Edit Below
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "  "
echo " ${CYAN} Infrastructure Management Installation for OpenShift 4.3${NC}"
echo "  "
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "  "
echo "  "
echo "  "



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# GET PARAMETERS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Input Parameters${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"

        while getopts "d:h:p:x:i:" opt
        do
          case "$opt" in
              x ) INPUT_CONSOLE_PREFIX="$OPTARG";;
              d ) INPUT_PATH="$OPTARG" ;;
              h ) INPUT_CLUSTER_NAME="$OPTARG" ;;
              p ) INPUT_PWD="$OPTARG" ;;
              i ) INPUT_IP="$OPTARG" ;;
          esac
        done


echo $INPUT_IP

        if [[ $INPUT_CONSOLE_PREFIX == "" ]];
        then
          echo "    ${RED}ERROR${NC}: Please provide the OCP console prefix (for example console)"
          echo "    USAGE: $0 -x <OCP_CONSOLE_PREFIX> -i <CF IP> [-h <CLUSTER_NAME>] [-p <MCM_PASSWORD>] [-d <TEMP_DIRECTORY>] "
          exit 1
        else
          echo "    ${GREEN}Console Prefix OK:${NC}                  $INPUT_CONSOLE_PREFIX"
          OCP_CONSOLE_PREFIX=$INPUT_CONSOLE_PREFIX
        fi





        if [[ $INPUT_PWD == "" ]];          
        then
          echo "    ${ORANGE}No Password provided, using${NC}         $MCM_PASSWORD"
        else
          echo "    ${GREEN}Password OK:${NC}                        '********"
          MCM_PASSWORD=$INPUT_PWD
        fi



        if [[ $INPUT_PATH == "" ]];
        then
          echo "    ${ORANGE}No Path provided, using${NC}             $TEMP_PATH"
        else
          echo "    ${GREEN}Path OK:${NC}                            $INPUT_PATH"
          TEMP_PATH=$INPUT_PATH
        fi


        if [[ ($INPUT_CLUSTER_NAME == "") ]];
        then
          getClusterFQDN
        fi



        if [[ $INPUT_IP == "" ]];
        then
          echo "    ${ORANGE}No specific MIQ URL provided, using${NC}         $CLUSTER_NAME"
          MIQ_HOST=$CLUSTER_NAME
        else
          echo "    ${GREEN}MIQ IP:${NC}                              $INPUT_IP"
          MIQ_HOST=$INPUT_IP
        fi


echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# PRE-INSTALL CHECKS
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Pre-Install Checks${NC}"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"

        checkCloudctlExecutable

        checkOpenshiftReachable

        checkKubeconfigIsSet

echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "



# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# Define some Stuff
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
# ---------------------------------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Define some Stuff${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"

        getInstallPath

        export MIQ_URL=https://manageiq.$CLUSTER_NAME

        # export CLIENT_ID=YWRtaW51c2Vy   # adminuser
        export CLIENT_ID=$(echo adminuser | base64)      
        #export CLIENT_SECRET="bXlzdXBlcnNlY3RyZXQ="   # mysupersectret
        export CLIENT_SECRET=$(echo $MCM_PASSWORD | base64) 





echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# CONFIG SUMMARY
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo " ${GREEN} Infrastructure Management will be installed into Cluster ${ORANGE}'$CLUSTER_NAME'${NC}"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo " ${PURPLE}Your configuration${NC}"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "    ${GREEN}CLUSTER :${NC}             $CLUSTER_NAME"
echo "    ------------------------------------------------------------------------------------------------------------------------------------------------"
echo "    ${GREEN}MCM Server:${NC}           $MCM_SERVER"
echo "    ${GREEN}MCM Proxy:${NC}            $MCM_PROXY"
echo "    ${GREEN}Client ID:${NC}            $MCM_USER"
echo "    ${GREEN}Client Secret:${NC}        ************"
echo "    ---------------------------------------------------------------------------------------------------------------------------"
echo "    ${GREEN}MIQ URL:${NC}                $MIQ_URL"
echo "    ------------------------------------------------------------------------------------------------------------------------------------------------"
echo "    ${GREEN}INSTALL PATH:${NC}         $INSTALL_PATH"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "----------------------------------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# PREREQUISITES
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${CYAN}Running Prerequisites${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"

        echo "---------------------------------------------------------------------------------------------------------------------------"

        export SCRIPT_PATH=$(pwd)

        echo "---------------------------------------------------------------------------------------------------------------------------"
        echo " Create Config Directory"
          rm -r $INSTALL_PATH/* 
          mkdir -p $INSTALL_PATH 
          cd $INSTALL_PATH
        echo "    ${GREEN}  OK${NC}"
        echo "  "

echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "




echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${CYAN}Adapt config file${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"

        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        # Get registration.json template
        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        cp $SCRIPT_PATH/tools/infra/registration.json ./registration.json

        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        # Adapt registration.json FIle
        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        echo " ${GREEN}Adapt registration.json File${NC}"

        ${SED} -i "s@ICP_PROXY_URL@$MCM_PROXY@" registration.json
        ${SED} -i "s/ICP_PROXY_PORT/443/" registration.json
        ${SED} -i "s@ICP_ENDPOINT_URL@$MCM_SERVER@" registration.json
        ${SED} -i "s/ICP_ENDPOINT_PORT/443/" registration.json
        ${SED} -i "s/CLIENT_ID/$CLIENT_ID/" registration.json
        ${SED} -i "s/CLIENT_SECRET/$CLIENT_SECRET/" registration.json
        ${SED} -i "s@MIQ_URL@$MIQ_URL@" registration.json


        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        # Get manageiq-external-auth-openidc.conf template
        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        cp $SCRIPT_PATH/tools/infra/manageiq-external-auth-openidc.conf ./manageiq-external-auth-openidc.conf

        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        # Adapt manageiq-external-auth-openidc.conf FIle
        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        echo " ${GREEN}Adapt manageiq-external-auth-openidc.conf File${NC}"

        ${SED} -i "s@MIQ_URL@$MIQ_URL@" manageiq-external-auth-openidc.conf
        ${SED} -i "s@MCM_PASSWORD@$MCM_PASSWORD@" manageiq-external-auth-openidc.conf
        ${SED} -i "s/CLIENT_SECRET/$CLIENT_SECRET/" manageiq-external-auth-openidc.conf
        ${SED} -i "s@MCM_SERVER@$MCM_SERVER@" manageiq-external-auth-openidc.conf
        ${SED} -i "s/CLIENT_ID/$CLIENT_ID/" manageiq-external-auth-openidc.conf


      # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        # Get manageiq-external-auth-openidc.conf template
        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        cp $SCRIPT_PATH/tools/infra/manageiq-pods/manageiq-operator/deploy/crds/manageiq_cr.yaml ./manageiq_cr.yaml

        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        # Adapt manageiq-external-auth-openidc.conf FIle
        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        echo " ${GREEN}Create Custom Resource File${NC}"

        ${SED} -i "s@MIQ_URL@manageiq.$MIQ_HOST@" manageiq_cr.yaml
        ${SED} -i "s@MCM_PASSWORD@$MCM_PASSWORD@" manageiq_cr.yaml
        ${SED} -i "s/CLIENT_SECRET/$CLIENT_SECRET/" manageiq_cr.yaml
        ${SED} -i "s@MCM_SERVER@$MCM_SERVER@" manageiq_cr.yaml
        ${SED} -i "s/CLIENT_ID/$CLIENT_ID/" manageiq_cr.yaml


      # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        # Get manageiq-external-auth-openidc.conf template
        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        cp $SCRIPT_PATH/tools/infra/config-secret.yaml ./config-secret.yaml

        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        # Adapt manageiq-external-auth-openidc.conf FIle
        # ---------------------------------------------------------------------------------------------------------------------------------------------------"
        echo " ${GREEN}Create secret File${NC}"

        ${SED} -i "s@MIQ_URL@manageiq.$MIQ_HOST@" config-secret.yaml
        ${SED} -i "s@MCM_PASSWORD@$MCM_PASSWORD@" config-secret.yaml
        ${SED} -i "s/CLIENT_SECRET/$CLIENT_SECRET/" config-secret.yaml
        ${SED} -i "s@MCM_SERVER@$MCM_SERVER@" config-secret.yaml
        ${SED} -i "s/CLIENT_ID/$CLIENT_ID/" config-secret.yaml
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "





echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${GREEN}Current registration.json file for installation${NC}"
echo " ${GREEN}Please Check if it looks OK${NC}"
echo " ${ORANGE}vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv${NC}"
echo "  "
        cat registration.json
echo "  "
echo " ${GREEN}Current manageiq-external-auth-openidc.conf file for installation${NC}"
echo " ${GREEN}Please Check if it looks OK${NC}"
echo " ${ORANGE}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^${NC}"
echo " ${ORANGE}vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv${NC}"
echo "  "
        cat manageiq-external-auth-openidc.conf
echo "  "
echo " ${ORANGE}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^${NC}"
echo " ${GREEN}Current Custom Resource for installation${NC}"
echo " ${GREEN}Please Check if it looks OK${NC}"
echo " ${ORANGE}vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv${NC}"
echo "  "
        cat manageiq_cr.yaml
echo "  "
echo " ${ORANGE}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^${NC}"
echo " ${GREEN}Current Secret for installation${NC}"
echo " ${GREEN}Please Check if it looks OK${NC}"
echo " ${ORANGE}vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv${NC}"
echo "  "
        cat config-secret.yaml
echo "  "
echo " ${ORANGE}^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^${NC}"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "  "
echo "  "
echo "  "
echo "  "



# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# INSTALL
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# ------------------------------------------------------------------------------------------------------------------------------------------------------------------------
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"
echo " ${ORANGE}Installing ${CYAN}Infrastructure Management${NC} into Cluster '$CLUSTER_NAME' ${NC}"
echo ""
echo "---------------------------------------------------------------------------------------------------------------------------"
echo "---------------------------------------------------------------------------------------------------------------------------"




        echo " ${GREEN}Get Cluster CA cert${NC}"
          kubectl get secret -n kube-public ibmcloud-cluster-ca-cert -o jsonpath='{.data.ca\.crt}' | base64 --decode | sed 's/CERTIFICATE/TRUSTED CERTIFICATE/' > $INSTALL_PATH/ibm-mcm-ca.crt
        echo " ${GREEN}    OK${NC}"


        oc create namespace manageiq


        oc create -n manageiq -f $SCRIPT_PATH/tools/infra/manageiq-pods/manageiq-operator/deploy/crds/manageiq.org_manageiqs_crd.yaml
        oc create -n manageiq -f $SCRIPT_PATH/tools/infra/manageiq-pods/manageiq-operator/deploy/role.yaml
        oc create -n manageiq -f $SCRIPT_PATH/tools/infra/manageiq-pods/manageiq-operator/deploy/role_binding.yaml
        oc create -n manageiq -f $SCRIPT_PATH/tools/infra/manageiq-pods/manageiq-operator/deploy/service_account.yaml
        oc create -n manageiq -f $SCRIPT_PATH/tools/infra/manageiq-pods/manageiq-operator/deploy/operator.yaml
        oc create -n manageiq -f $SCRIPT_PATH/tools/infra/manageiq-pods/manageiq-operator/deploy/kafka-secret.yaml


        oc delete secret -n manageiq miq-configuration
        oc delete secret -n manageiq miq-secret
        oc delete secret -n manageiq my-oidc-secret

        kubectl create secret -n manageiq generic miq-configuration --from-file=./manageiq-external-auth-openidc.conf
        kubectl create secret -n manageiq generic miq-secret --from-file=./ibm-mcm-ca.crt
        
        kubectl create -n manageiq -f ./config-secret.yaml

        kubectl create secret -n manageiq generic miq-client-secret --from-literal=CLIENT_ID=$CLIENT_ID --from-literal=CLIENT_SECRET=$CLIENT_SECRET




        oc delete -n manageiq -f manageiq_cr.yaml
        oc create -n manageiq -f manageiq_cr.yaml

oc create clusterrolebinding manageiq-orchestrator-binding --clusterrole=cluster-admin \
 --serviceaccount=manageiq:manageiq-orchestrator -n manageiq

oc create clusterrolebinding manageiq-orchestrator-binding --clusterrole=cluster-admin \
 --serviceaccount=manageiq:manageiq-orchestrator -n manageiq

        echo " ${GREEN}Login to MCM Cluster${NC}"  
        LOGIN_OK=$(cloudctl login -a ${MCM_SERVER} --skip-ssl-validation -u ${MCM_USER} -p ${MCM_PWD} -n kube-system)
        if [[ $LOGIN_OK =~ "Error response from server" ]];
        then
          echo "    ${RED}ERROR${NC}: Could not login to MCM Hub on Cluster '$CLUSTER_NAME'. Aborting."
          exit 2
        else
          #cloudctl iam oauth-client-register -f registration.json
          echo "    ${GREEN}  OK${NC}"
          echo "  "
        fi

        echo " ${GREEN}Register OAUTH Client${NC}"
          cloudctl iam oauth-client-delete -f $CLIENT_ID
          cloudctl iam oauth-client-register -f $INSTALL_PATH/registration.json
        echo " ${GREEN}    OK${NC}"


        echo " ${GREEN}Adapt MCM navigation menu${NC}"
          $SCRIPT_PATH/tools/navigation/automation-navigation-updates.sh -c https://$MIQ_HOST
        echo " ${GREEN}    OK${NC}"

    echo ""
    echo ""
    echo ""
    echo ""
    echo ""
    echo ""



echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo " ${GREEN} Infrastructure Management Installation.... DONE${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}----------------------------------------------------------------------------------------------------------------------------------------------------${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"
echo "${GREEN}***************************************************************************************************************************************************${NC}"


